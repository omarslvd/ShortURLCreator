<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="imlIcons.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>122, 17</value>
  </metadata>
  <data name="imlIcons.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACY
        DgAAAk1TRnQBSQFMAgEBCAEAAegBAAHoAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAATADAAEBAQABCAYAAQwYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD//8A/wD/AP8ABQAQRgLz
        AfIBvAHvAe0G7AHvAfEC8xC6AUkDKAJDASgCLwEoAUMBEQQoAUYEbwNGBm8CRgHzAfcB7wG8AfEB8wHw
        ArwC8wG8AZIB7AHvAfEQugMvASgBQwEpBC8BKQFDASgDLwFGARoD/wFGAW8H/wEaAUYC/wHwApEBuwG0
        ApEBCQGRAbUB9AG8AZIB7AW6AbsB8ALyAfABuwW6Ay8CQwYvASgBQwMvAUYBGgP/AUYBkwj/AUYB8wG1
        ArsGCQG7AZEBtQHxAf8B7AS6AQkG9AEJBLoDLwFDASgGLwEoAUMDLwFGARoD/wFGAZMD/wHxAfQD/wFG
        AfABkQsZAZEB8AHsA7oBCQL0ARkCCQEZAvQBCQO6Ay8BQwEoBi8BKAFDAy8BRgEaA/8BRgFvA5MBTAEa
        A/8BRgHyAbsD8QG8AXUBUwF1AbwD8QGRAfAB7AK6AbsC9AEJBLoBCQL0AbsCugMvAkMGLwEoAUMDLwFG
        ARoD/wFGAW8B8wf/AUYB8wG8AvIBvAVTAbwC8gG8AfMB7AK6AbsB9AEZAroCuwK6ARkB9AEJAroDLwEo
        AUMBKAQvASgBQwEoAy8BRgEaA/8BRgGTCP8BRgHwAfcC8wF1BVMBdQLzAbUB8gHsAroB8AH0AfACugLz
        AroB8AH0AfACugQvA0MBKAEpASIBEQEVBC8BRgEaA/8BRgGTB/8BkwFGAfABkQLzB1MC8wGRAfIB7AK6
        AQkBGQEJAboBuwL0AbsBugEJARkBCQK6BS8BKANDAREBKAUvAUYBkwMaAUYBkwP/BW8BRgHyAbsC9AF1
        BVMBdQL0AZEB/wHsBroBuwL0AbsGugcvARUBQwcvAUYBdAOTAUYBkwP/AQcB8wP/AUYB9AHyAv8BGgVT
        ARoC/wHxAf8B7QO6AbsCugG7AvQBuwK6AbsDugcvAUkBQwcvAUYBGgP/AUYBkwj/AUYB8QH3A/8BGgF1
        AVMBdQEaAv8B9AH3Af8B7QK6AbsB8wEJAboBuwL0AbsBugG7AfMBuwK6By8BFQFDBy8BRgEaA/8BRgGT
        B/8B9AFGAfABkQr/AfMBkQH/Ae0CugEJAfQBCQG6AbsC9AG7AboBCQH0AQkCugcvARUBQwcvAUYBdAOT
        AkYBdAaTAkYB/wHyAQcB9wG8Bf8BvAK7AZEB/wHtA7oBuwK6AbsC9AG7AroBuwO6By8BFQFDBy8QRgL0
        Af8BvAGRAfIDkQH0AbQBtQG7AfMB/wH0BroBuwLzAbsGugcvARUBQwcvEEYD9AH/AvQB8AH0Bf8D9Aa6
        AbsC8wG7BroHLwEVAUMHLxCFELwR/wH0Bv8B9AH/AvQE/xCFAbwOCQG8Bf8B6gFZA1IBWQHsBP8B9AL/
        AfQC/wH0AfMC/wH0Av8B8wH/AfQChQP/AoUB/wKFAf8BhQP/AYUBvAUJAwABbQUJAbwE/wFRAVkBUgPr
        AVIBWQF0Bv8B9AL/AfMC/wL0Bf8BhQH/A4UB/wGFAf8BhQH/AoUB/wOFAbwFCQG8AwABbQQJAbwD/wFR
        AVkBUgHrA1IB6wFSAVkBdAP/AfQC/wH0A/8BBwGTAe0BkwEHAfQB/wHzAYUB/wOFAf8BhQL/A4UB/wOF
        AbwGCQG8AwABbQMJAbwC/wFtAlkCUgRZAVgCWQEcBP8B9gH0Af8B8wIcARoB8wEaApMBvQH/AYUB/wOF
        Af8BhQH/AYUB/wKFAf8DhQG8AQkHvAMAAW0CCQG8Av8BUQtZAXQD/wH0Av8BGgKTAvQB/wH0Ab0BBwG2
        AfMBhQH/A4UB/wGFAf8ChQH/AYUB/wOFAbwBCQsAAW0BCQG8Af8BbgF5AVgBbQESAVIDWQFuAeoBUgFZ
        AXkBHAH2AvQB/wG9ApMCvQMaAb0BGgGTAfQBhQH/A4UB/wGFA/8ChQH/A4UBvAEJDAABCQG8AVgCegFz
        Ae8BEgGSAnoBdAHvARIBkgF6AVgBegLyAfQB8wSTARwBkwEcAe0BHAHtAewBvRCFAbwBCQwAAQkBvAH/
        ApoBdAHxAfQB7AJ6AXQB8AH/Ae0BegEaAZkB8wFuAZMBvQEaAfQBGgK9AfQB8wG9Af8BGgGSAbwQhQG8
        AQkLAAIJAbwC/wGZAXoBdAFzAXkDegJzAXQBegEaAf8BvQOTARwBkwIcAZMCbgGTAfQB/wHyAf8QhQG8
        BwkBbQMABAkD/wuaAv8B8wEHARoC9ALzAf8BGgGTAbwB8wL/AvQChQH/AoUB/wGFAf8ChQH/AoUB/wKF
        AbwGCQFtAwAECQG8BP8JmgGZA/8BBwH3ARoC/wH0ARoB7QHvAfMB/wH0A/8ChQH/AoUB/wGFAf8BhQL/
        AoUB/wKFAbwFCQFtAwAFCQG8A/8BbgGZApoEwwEaAQcE/wH0AQcB9wOTAe0BvAH0Bv8ChQH/AoUB/wGF
        Av8BhQH/AYUB/wGFAf8BhQG8BQkDAAYJAbwC/wF0AVkBUgF5Cv8B8wL/AfICBwHwAfIC/wHzAfQB/wL0
        Af8BhQP/AYUB/wGFAf8ChQH/AYUB/wGFAf8BhQG8DgkBvAL/AZkDWQF6AZoJ/wHzAfQC/wP0Av8B9AX/
        EIUQvAP/AQcBGgF6AZoBwwn/AfQC/wHzAv8B9AT/AvQB/wHzAUIBTQE+BwABPgMAASgDAAFAAwABMAMA
        AQEBAAEBBQABgAEBFgAD//8AggAL
</value>
  </data>
</root>